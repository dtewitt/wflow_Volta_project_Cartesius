[inputmapstacks]
# Define the forcing needed for the model here
# The filename is either the name of the pcraster mapstack 
# or the name of the variable in the netcdf input file
Precipitation= /inmaps/P
Temperature= /inmaps/TEMP
EvapoTranspiration= /inmaps/PET

[framework]
# outputformat for the dynamic mapstacks (not the states and summary maps)
# 1: pcraster
# 2: numpy
# 3: matlab
outputformat = 1

# What does this do?
debug = 0

# settings to work with netcdf files
#netcdfinput = None
#netcdfoutput = output.nc
#netcdfstaticoutput = staticoutput.nc
#netcdfstatesinput = None
#netcdfstatesoutput = states.nc
#netcdfwritebuffer=1000
#netcdf_format=NETCDF4_CLASSIC

# Set projection
EPSG = EPSG:4326

# Model parameters and settings

[run]
starttime = 1997-01-01 00:00:00
endtime = 2007-02-28 00:00:00
# timestep op the model (1 day)
timestepsecs = 86400
# start model with warm (=0) or cold (=1) state
reinit = 1



[model]
# 2290 to 165
AnnualDischarge = 165
# 120 to 60
Alpha = 60
# ModelSnow was = 1
ModelSnow = 0
ScalarInput = 0
# Not used at the moment
InterpolationMethod = inv

Tslice = 1
UpdMaxDist = 300000.0
P_style = 1
# cold start (input state maps are set to 0) for 1
# but uses instate folder maps for 0 
reinit = 1
fewsrun = 0
OverWriteInit = 0
updating = 0
updateFile = no_set
sCatch = 0
intbl = intbl
PET_style = 1
TEMP_style = 1
MaxUpdMult = 1.3
MinUpdMult = 0.7
UpFrac = 0.8
ExternalQbase = 0
SetKquickFlow = 1
MassWasting = 0
SubCatchFlowOnly = 0
nrivermethod = 2
kinwaveIters = 1

wflow_subcatch = staticmaps/wflow_subcatch.map
wflow_dem = staticmaps/wflow_dem.map
wflow_ldd = staticmaps/wflow_ldd.map
wflow_river = staticmaps/wflow_river.map
wflow_riverlength = staticmaps/wflow_riverlength.map
wflow_riverlength_fact = staticmaps/wflow_riverlength_fact.map
wflow_landuse = staticmaps/wflow_landuse.map
wflow_soil = staticmaps/wflow_soil.map
wflow_gauges = staticmaps/wflow_gauges.map
wflow_inflow = staticmaps/wflow_inflow.map
wflow_mgauges = staticmaps/wflow_mgauges.map
wflow_riverwidth = staticmaps/wflow_riverwidth.map
TemperatureCorrectionMap = staticmapswflow_tempcor.map


[misc]
#mapSaveInterval=365

[layout]
# if set to zero the cell-size is given in lat/long (the default)
sizeinmetres = 0

#[outputmaps]
####################################self.SurfaceRunoff=runoff
#self.WaterLevel=lev
#self.QuickFlowCubic=quick
#self.BaseFlowCubic=bas
#self.WaterLevel=lev
#self.Precipitation=prec
###############################self.ActEvap=ET
#self.BaseFlow=bas
#self.InwaterMM=inwMM
#self.SnowMelt=melt
###############################self.SoilMoisture=SM
#self.UpperZoneStorage=UppSto                                                     
#self.LowerZoneStorage=LowSto
############################################self.LowerZoneStorage + self.UpperZoneStorage + self.SoilMoisture = GRACE
#self.Percolation=per
#self.ForecQ_qmec=qmec         
#self.MassBalKinWave=mkin
#self.UpRatioKyn=upr


# Outputtimeseries
# List all timeseries in tss format to save in this section. Timeseries are
# produced as averages per subcatchment. 

#[outputcsv_0]
#samplemap=staticmaps/wflow_subcatch.map
#self.SurfaceRunoff=Runoff_spatial_avg.csv

[outputcsv_0]
samplemap=staticmaps/wflow_gauges.map
self.SurfaceRunoff=Runoff_gauges.csv

#[outputtss_0]
#samplemap=staticmaps/wflow_gauges.map
#self.SurfaceRunoff=Runoff_gauges.tss


# add extra summary maps here
#[summary]
#self.Altitude=Altitude.map
#self.MaxLeakage=MaxLeakage.map

#[summary_sum]
# fluxes
#self.Precipitation=Sumprecip.map
##self.EvapoTranspiration=SumEvapoTranspiration.map
#self.ActEvap=SumActEvap.map
#self.SurfaceRunoff=Sumrunoff.map

#[summary_min]
# fluxes
#self.Precipitation=Minprecip.map
##self.EvapoTranspiration=MinEvapotranspiration.map
#self.ActEvap=MinActEvap.map
#self.SurfaceRunoff=Minrunoff.map

## states
#self.InterceptionStorage=MinInterceptionStorage.map
#self.SoilMoisture=MinSoilMoisture.map
#self.UpperZoneStorage=MinUpperZoneStorage.map
#self.LowerZoneStorage=MinLowerZoneStorage.map


#[summary_max]
## fluxes
#self.Precipitation=Maxprecip.map
##self.EvapoTranspiration=MaxEvapotranspiration.map
#self.ActEvap=MaxActEvap.map
#self.SurfaceRunoff=Maxrunoff.map

## states
#self.InterceptionStorage=MaxInterceptionStorage.map
#self.SoilMoisture=MaxSoilMoisture.map
#self.UpperZoneStorage=MaxUpperZoneStorage.map
#self.LowerZoneStorage=MaxLowerZoneStorage.map


#[summary_avg]
## fluxes
#self.Precipitation=avgprecip.map
##self.EvapoTranspiration=avgEvapoTranspiration.map
#self.ActEvap=avgActEvap.map
#self.SurfaceRunoff=avgrunoff.map

## states
#self.InterceptionStorage=avgInterceptionStorage.map
#self.SoilMoisture=avgSoilMoisture.map
#self.UpperZoneStorage=avgUpperZoneStorage.map
#self.LowerZoneStorage=avgLowerZoneStorage.map



[API]
#static
Altitude = 3, m
Bw = 3, m
River = 3, -
DLC = 3, m

# states
SurfaceRunoff = 2, m^3/s
WaterLevel = 2, m
InterceptionStorage = 2, mm
DrySnow = 2, mm
FreeWater = 2, mm
LowerZoneStorage = 2, mm
UpperZoneStorage = 2, mm
SoilMoisture = 2, mm
ActEvap = 2, mm

#fluxes
BaseFlow = 1, mm/timestep
Percolation = 1, mm/timestep
QuickFlow = 1, mm/timestep
RealQuickFlow = 1, mm/timestep
CapFlux = 1, mm/timestep
SurfaceRunoffMM = 1, mm/timestep
KinWaveVolume = 1, m^3

#parameters
#soil
FC = 3, mm
BetaSeepage = 3, -
LP = 3, -
K4 = 3, 1/timestep

#If SetKquickFlow is set to 1
KQuickFlow = 3, 1/timestep
SUZ = 3, mm
K0 = 3, 1/timestep
#If SetKquickFlow is set to 0
#KHQ = 3, 1/timestep
#HQ = 3, ???
# high flow rate HQ for which recession rate of upper reservoir is known (3.27000)
#AlphaNL = 3, -

PERC = 3, mm/timestep
CFR = 3, -
Pcorr = 3, -
RFCF = 3, -
SFCF = 3, -
Cflux = 3, mm/timestep
ICF = 3, mm
CEVPF = 3, -
EPF = 3, -
ECORR = 3, -
ECALT = 3, mm/100m

#Snow modelling parameters
TTI = 3, oC
TT = 3, oC
Cfmax = 3, mm/oC/timestep
WHC = 3, -

# routing
N = 3, -
NRiver = 3, -

# Below are the forcing variables. By putting these here you MUST
# supply them via the API, if not these will default to 0.0
P=0, mm/timestep
PET=0, mm/timestep
TEMP=0, oC


#[fit]
# The parameters are name parameter_0 to parameter_n
#parameter_0 = N
#parameter_1 = N_River
# Q specifies the tss file with measure discharge data
# the path is relative to the case directory
#Q = intss/Boromo.tss
# The columns in the measured Q you want to fit to
#ColMeas = [1]
# The columns in the measured Q you want to fit
#ColSim = [1]
# Number of warup timesteps. These are not used in fitting
#WarmUpSteps = 365
# The map defining the areas you want to adjust
#areamap=staticmaps/wflow_subcatch.map
# The areas you want to adjust for each Qmeas/Qsim combination
#areacode=[1]
